import numpy as np
import pandas as pd 
import rasterio
from pyproj import CRS, Transformer
# Defining the Custom projection

def geographic2projected(crs_input, geoCoords):
    # Ensure input arrays are numpy arrays.
    lat = np.asarray(geoCoords[0])
    lon = np.asarray(geoCoords[1])
    
    # Calculate the median longitude to center the projection.
    median_lon = np.median(lon)
    
    # Define a custom Transverse Mercator projection centered at the median longitude.
    crs_custom = CRS.from_string(f"+proj=tmerc +lon_0={median_lon} +datum=WGS84")
    
    # Create the input CRS object.
    input_crs = CRS.from_user_input(crs_input)
    
    # Create a transformer from the input CRS to the custom projection.
    transformer = Transformer.from_crs(input_crs, crs_custom, always_xy=True)
    
    # Perform a vectorized transformation.
    x, y = transformer.transform(lon, lat)
    projCoords = np.array([x, y])
    
    return crs_custom, projCoords

# Converting the TIFF files to Dataframe
def tif_to_dataframe(elevation_tiff_path_1, elevation_tiff_path_2, gravity_tiff_path_1, gravity_tiff_path_2):
    # Open the first elevation TIFF file
    with rasterio.open(elevation_tiff_path_1) as src_elev1:
        elevation_1 = src_elev1.read(1)
        transform_elev1 = src_elev1.transform
        height_1, width_1 = elevation_1.shape

    # Open the second elevation TIFF file
    with rasterio.open(elevation_tiff_path_2) as src_elev2:
        elevation_2 = src_elev2.read(1)
        transform_elev2 = src_elev2.transform
        height_2, width_2 = elevation_2.shape

    # Open the first gravity TIFF file
    with rasterio.open(gravity_tiff_path_1) as src_grav1:
        gravity_1 = src_grav1.read(1)
        transform_grav1 = src_grav1.transform
        height_g1, width_g1 = gravity_1.shape

    # Open the second gravity TIFF file
    with rasterio.open(gravity_tiff_path_2) as src_grav2:
        gravity_2 = src_grav2.read(1)
        transform_grav2 = src_grav2.transform
        height_g2, width_g2 = gravity_2.shape

        latitude_1 = []
        latitude_2 = []
        longitude_1 = []
        longitude_2 = []
        elevation_1 = []
        elevation_2 = []
        gravity_1 = []
        gravity_2 = []

        for row in range(height_1):
            for col in range(width_1):
                lon_1, lat_1 = transform_elev1 * (col,row)
                latitude_1.append(lat_1)
                longitude_1.append(lon_1)
                elevation_1.append(elevation_1[row, col])
                gravity_1.append(gravity_2[row, col])
        
        for row in range(height_2):
            for col in range(width_2):
                lon_2, lat_2 = transform_elev2 * (col,row)
                latitude_2.append(lat_2)
                longitude_2.append(lon_2)
                elevation_2.append(elevation_2[row, col])
                gravity_2.append(gravity_2[row, col])
        
        df = pd.DataFrame({
            'Latitude_Maciço': latitude_1,
            'Latitude_Recorte': latitude_2,
            'Longitude_Maciço': longitude_1,
            'Longitude_Recorte': longitude_2,
            'Gravidade_Maciço': gravity_1,
            'Gravidade_Recorte': gravity_2
        })

        return df





